name: CI/CD for React App

on:
  push:
    branches: [main]
    tags:
      - "v*.*.*"

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: my-react-app
      DOCKER_REPO: moltresinnovations
      AWS_EC2_HOST: ${{ secrets.AWS_EC2_HOST }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required to fetch tag

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        run: echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

      - name: Determine Docker Tag
        id: version
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            # Use manually pushed tag
            VERSION=${GITHUB_REF#refs/tags/}
          else
            # Auto-increment based on the latest tag
            git fetch --tags
            LATEST_TAG=$(git tag -l "v*" --sort=-v:refname | head -n 1)

            if [[ -z "$LATEST_TAG" ]]; then
              VERSION="v1.1.1"
            else
              MAJOR=$(echo "$LATEST_TAG" | cut -d. -f1 | sed 's/v//')
              MINOR=$(echo "$LATEST_TAG" | cut -d. -f2)
              PATCH=$(echo "$LATEST_TAG" | cut -d. -f3)
              NEXT_PATCH=$((PATCH + 1))
              VERSION="v${MAJOR}.${MINOR}.${NEXT_PATCH}"
            fi

            # Create the tag in the repo (optional, if you want to persist it)
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git tag "$VERSION"
            git push origin "$VERSION"
          fi

          echo "IMAGE_TAG=$VERSION" >> $GITHUB_ENV
          echo "Using Docker Tag: $VERSION"

      - name: Build and Push Docker Image
        run: |
          TAG=$(date +%Y%m%d%H%M%S)
          docker build -t ${DOCKER_USERNAME}/${DOCKER_REPO}:${TAG} my-react-app
          docker push ${DOCKER_USERNAME}/${DOCKER_REPO}:${TAG}
          echo "IMAGE_TAG=${TAG}" >> $GITHUB_ENV

      - name: Deploy on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            DOCKER_REPO=${{ env.DOCKER_REPO }}
            IMAGE_TAG=${{ env.IMAGE_TAG }}
            DOCKER_USERNAME=${{ env.DOCKER_USERNAME }}
            DOCKER_PASSWORD=${{ env.DOCKER_PASSWORD }}

            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

            docker pull ${DOCKER_USERNAME}/$DOCKER_REPO}:${IMAGE_TAG}
            docker stop react-app || true
            docker rm react-app || true
            docker run -d --name react-app -p 81:80 ${DOCKER_USERNAME}/${DOCKER_REPO}:${IMAGE_TAG}
